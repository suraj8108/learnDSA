
Majority Element
	https://takeuforward.org/data-structure/majority-elementsn-3-times-find-the-elements-that-appears-more-than-n-3-times-in-the-array/


Suppose the number of element is 8, [2,1,1,3,1,4,5,6]

	-> The max number of element that have occurrence greater that n/3 is 2. And minimum element can be 0.
	-> 8 / 3 is 2.6 -> This means only two element exists that can have occurence greater than 2. 
	
	------------------------------------
	n / 2 occurence Pseudo code
	------------------------------------
	
		count = 0
		element = MIN_VALUE
		for(1 to n-1)
			if count == 0
				element = arr[i]
				count = 1
			else if arr[i] == element
				count++
			else 
				count--
	
	------------------------------------
	n / 3 occurence Pseudo code
	------------------------------------
	Will follow the same way.  
		count1 = 0, count2 = 0
		elem1 = MIN, elem2 = MIN
		
		for(1 to n-1)
			if count1 == 0 && arr[i] != elem2
				elem1 = arr[i]
				count1 = 1
			else if count2 == 0 && arr[i] != elem1
				elem2 = arr[i]
				count2 = 1
			else if arr[i] == elem1:
				count1++
			else if arr[i] == elem2:
				count2++
			else:
				count1--;
				count2--;

		count1 == 0 && arr[i] != elem2
			=> In this first condition is simple to understand but reason behind the second condition is that at the same time elem1 and elem2 should not be same.
			   Else we will loose that one element which is greater that n/3.
	